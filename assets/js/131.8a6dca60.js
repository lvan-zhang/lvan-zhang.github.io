(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{384:function(s,t,e){"use strict";e.r(t);var n=e(0),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",[s._v("问题描述\n当我们工作的时候，会遇到这样的情况：公司用的gitlab仓库，你自己私下用github仓库，这样就产生了一个问题，我们需要登录不同的账号管理不同的git仓库，那么怎么做呢，接下来看我操作⬇️\n解决方法\n我们要生成两个ssh key来向不同的git仓库push代码")]),s._v(" "),e("p",[s._v('ssh-keygen -t rsa -C "公司邮箱@xxx.com"')]),s._v(" "),e("p",[s._v('ssh-keygen -t rsa -C "自...')])]),s._v(" "),e("h2",{attrs:{id:"问题描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[s._v("#")]),s._v(" 问题描述")]),s._v(" "),e("p",[s._v("当我们工作的时候，会遇到这样的情况：公司用的gitlab仓库，你自己私下用github仓库，这样就产生了一个问题，我们需要登录不同的账号管理不同的git仓库，那么怎么做呢，接下来看我操作⬇️")]),s._v(" "),e("h2",{attrs:{id:"解决方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[s._v("#")]),s._v(" 解决方法")]),s._v(" "),e("p",[s._v("我们要生成两个ssh key来向不同的git仓库push代码")]),s._v(" "),e("ol",[e("li",[e("p",[e("code",[s._v('ssh-keygen -t rsa -C "公司邮箱@xxx.com"')])])]),s._v(" "),e("li",[e("p",[e("code",[s._v('ssh-keygen -t rsa -C "自己邮箱@xxx.com"')])])]),s._v(" "),e("li",[e("p",[s._v("在家目录执行以上代码，然后回车，会提示你输入一个名字，如果你不输入直接回车会使用默认的名字生成id_rsa.pub和id_rsa文件，（我之前用公司的邮箱生成ssh key是直接回车的，自已邮箱输入了名字github_rsa，就生成了如图的样子)")])]),s._v(" "),e("li",[e("p",[e("img",{attrs:{src:"https://img-blog.csdnimg.cn/20190617233721214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80Mzk3MjQzNw==,size_16,color_FFFFFF,t_70",alt:"在这里插入图片描述"}})])]),s._v(" "),e("li",[e("p",[s._v("然后新建一个config文件，如上图，在里面输入\nlinux下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#dxy gitlab\n\tHost gitlab.dxy.net\n\tHostName gitlab.dxy.net\n\tPreferredAuthentications publickey\n\tIdentityFile ~/.ssh/id_rsa\n#my github\n\tHost github.com\n\tHostName github.com\n\tPreferredAuthentications publickey\n\tIdentityFile ~/.ssh/github_rsa\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("windows下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("#dxy gitlab\n\tHost gitlab.dxy.net\n\tHostName gitlab.dxy.net\n\tPreferredAuthentications publickey\n\tIdentityFile C:\\\\Users\\\\\\admin\\\\.ssh\\\\id_rsa\n#my github\n\tHost github.com\n\tHostName github.com\n\tPreferredAuthentications publickey\n\tIdentityFile C:\\\\Users\\\\\\admin\\\\.ssh\\\\github_rsa\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("code",[s._v("Host")]),s._v(" ： 相当于一个别名，远程仓库地址的域名别名它涵盖了下面一个段的配置，我们可以通过他来替代将要连接的服务器地址。这里可以使用任意字段或通配符。访问ssh的时候如果服务器地址能匹配上这里Host指定的值，则Host下面指定的HostName将被作为最终的服务器地址使用，并且将使用该Host字段下面配置的所有自定义配置来覆盖默认的/etc/ssh/ssh_config配置信息。\n"),e("code",[s._v("HostName")]),s._v(" ：真正连接的服务器地址\n"),e("code",[s._v("User")]),s._v("：自定义的用户名\n"),e("code",[s._v("PreferredAuthentications")]),s._v(" 指定优先使用哪种方式验证，支持密码和秘钥验证方式\n"),e("code",[s._v("IdentityFile")]),s._v("：指定本次连接使用的密钥文件")])]),s._v(" "),e("li",[e("p",[s._v("然后，将刚刚生成的公司的公钥id_rsa.pub放到gitlab的ssh配置里；自己的公钥github_rsa.pub放到自己github的ssh配置里。自此，大功告成，你就可以就可以通过不同的Host来针对不同的git仓库和git项目使用不同的ssh key啦~")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);