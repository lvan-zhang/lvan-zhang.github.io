(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{485:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",[s._v("js的继承方式有很多，比如\n一、借用构造函数继承（call，apply，bind）\n1.介绍\n利用call，apply，bind借用父类的构造函数\n2.实现\nfunction Animal (name) {\nthis.name = name\nthis.showName = function () {\nalert(name)\n}\n}\nfunction Cat () {\n// apply用...")])]),s._v(" "),t("p",[s._v("js的继承方式有很多，比如")]),s._v(" "),t("h3",{attrs:{id:"一、借用构造函数继承（call，apply，bind）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、借用构造函数继承（call，apply，bind）"}},[s._v("#")]),s._v(" 一、借用构造函数继承（call，apply，bind）")]),s._v(" "),t("h5",{attrs:{id:"_1-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍"}},[s._v("#")]),s._v(" 1.介绍")]),s._v(" "),t("p",[s._v("利用call，apply，bind借用父类的构造函数")]),s._v(" "),t("h5",{attrs:{id:"_2-实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现"}},[s._v("#")]),s._v(" 2.实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Animal (name) {\n\tthis.name = name\n\tthis.showName = function () {\n\t\talert(this.name)\n\t}\n}\nfunction Cat () {\n\t// apply用法：传参传一个数组\n\tAnimal.apply(this, [name])\n}\nvar cat = new Cat('飞翔的哔哔鸡')\ncat.showName()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" // call用法：传参传一个字符串\nAnimal.call(this, name)\n // bind用法：先调用再传参\nAnimal.bind(this)(name)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h5",{attrs:{id:"_3-优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-优缺点"}},[s._v("#")]),s._v(" 3.优缺点")]),s._v(" "),t("h6",{attrs:{id:"_1）优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1）优点"}},[s._v("#")]),s._v(" 1）优点")]),s._v(" "),t("p",[s._v("简单明了")]),s._v(" "),t("h6",{attrs:{id:"_2）缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2）缺点"}},[s._v("#")]),s._v(" 2）缺点")]),s._v(" "),t("p",[s._v("无法继承原型链上的属性和方法")]),s._v(" "),t("h3",{attrs:{id:"二、原型链继承"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、原型链继承"}},[s._v("#")]),s._v(" 二、原型链继承")]),s._v(" "),t("h5",{attrs:{id:"_1-介绍-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍-2"}},[s._v("#")]),s._v(" 1.介绍")]),s._v(" "),t("p",[s._v("利用原型链来实现继承，父类的一个实例作为子类的原型，也就是 子构造函数.prototype = new 父构造函数()")]),s._v(" "),t("h5",{attrs:{id:"_2-实现-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现-2"}},[s._v("#")]),s._v(" 2.实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Animal (name) {\n\tthis.name = name\n\tthis.friends = ['小狗','小猫']\n\tthis.showName = function () {\n\t\talert(this.name)\n\t}\n}\nfunction Cat () {\n}\nCat.prototype = new Animal()\n// 注意这里new Animal()生成的父类对象并没有constructor属性,故需添加上\nCat.prototype.constructor = Cat\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h5",{attrs:{id:"_3-优缺点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-优缺点-2"}},[s._v("#")]),s._v(" 3.优缺点")]),s._v(" "),t("h6",{attrs:{id:"_1）优点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1）优点-2"}},[s._v("#")]),s._v(" 1）优点")]),s._v(" "),t("p",[s._v("容易实现")]),s._v(" "),t("h6",{attrs:{id:"_2）缺点-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2）缺点-2"}},[s._v("#")]),s._v(" 2）缺点")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//当父类中包含引用类型属性值时，其中一个子类的多个实例中，只要其中一个实例引用属性只发生修改一个修改，其他实例的引用类型属性值也会立即发生改变\n//原因是父类的属性变成子类的原型属性\nvar cat1 = new Cat()\nvar cat2 = new Cat()\ncat1.friends.push('小猪')\nconsole.log(cat1.friends) //['小狗','小猫','小猪']\nconsole.log(cat2.friends) //['小狗','小猫','小猪']\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"三、组合式继承（原型链继承-借用构造函数继承）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、组合式继承（原型链继承-借用构造函数继承）"}},[s._v("#")]),s._v(" 三、组合式继承（原型链继承+借用构造函数继承）")]),s._v(" "),t("h5",{attrs:{id:"_1-介绍-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍-3"}},[s._v("#")]),s._v(" 1.介绍")]),s._v(" "),t("p",[s._v("实际开发比较常用（当然不考虑兼容性的话我更喜欢es6的extend）")]),s._v(" "),t("h5",{attrs:{id:"_2-实现-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现-3"}},[s._v("#")]),s._v(" 2.实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("function Animal (name) {\n\tthis.name = name\n\tthis.showName = function () {\n\t\talert(this.name)\n\t}\n}\nfunction Cat () {\n\t// apply用法：传参传一个数组\n\tAnimal.apply(this, [name]) //第二次调用\n}\nCat.prototype = new Animal() //第一次调用\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var cat = new Cat('飞翔的哔哔鸡')\ncat.showName()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h5",{attrs:{id:"_3-优缺点-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-优缺点-3"}},[s._v("#")]),s._v(" 3.优缺点")]),s._v(" "),t("h6",{attrs:{id:"_1）优点-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1）优点-3"}},[s._v("#")]),s._v(" 1）优点")]),s._v(" "),t("p",[s._v("解决了构造继承和原型链继承的两个问题")]),s._v(" "),t("h6",{attrs:{id:"_2）缺点-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2）缺点-3"}},[s._v("#")]),s._v(" 2）缺点")]),s._v(" "),t("p",[s._v("父类的构造函数被调用两次，实际上子类上会拥有超类的两份属性，只是子类的属性覆盖了超类的属性")]),s._v(" "),t("h3",{attrs:{id:"四、es6的extends"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、es6的extends"}},[s._v("#")]),s._v(" 四、es6的extends")]),s._v(" "),t("h5",{attrs:{id:"_1-介绍-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-介绍-4"}},[s._v("#")]),s._v(" 1.介绍")]),s._v(" "),t("p",[s._v("实际开发比较常用，写法更加面向对象，原理还是原型链")]),s._v(" "),t("h5",{attrs:{id:"_2-实现-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现-4"}},[s._v("#")]),s._v(" 2.实现")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("class Animal {\n\tconstructor (name) {\n\t\tthis.name = name\n\t}\n\tshowName () {\n\t\talert(this.name)\n\t}\n}\nclass Cat extends Animal {\n\tconstructor (name) {\n\t\tsuper(name)\n\t\tthis.type = '宠物'\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var cat = new Cat('飞翔的哔哔鸡')\ncat.showName()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h5",{attrs:{id:"_3-super关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-super关键字"}},[s._v("#")]),s._v(" 3.super关键字")]),s._v(" "),t("p",[s._v("super这个关键字，既可以当作函数使用，也可以当作对象使用。当作函数使用时，super代表父类的构造函数，并在子类中执行Parent.apply(this)，从而将父类实例对象的属性和方法，添加到子类的this上面。以下三点需要特别注意：")]),s._v(" "),t("h6",{attrs:{id:"_1）子类必须在constructor方法中调用super方法，如果子类没有定义constructor方法，constructor方法以及其内部的super方法会被默认添加。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1）子类必须在constructor方法中调用super方法，如果子类没有定义constructor方法，constructor方法以及其内部的super方法会被默认添加。"}},[s._v("#")]),s._v(" 1）子类必须在constructor方法中调用super方法，如果子类没有定义constructor方法，constructor方法以及其内部的super方法会被默认添加。")]),s._v(" "),t("h6",{attrs:{id:"_2）在子类的constructor方法中，只有调用super之后，才可以使用this关键字，否则会报错。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2）在子类的constructor方法中，只有调用super之后，才可以使用this关键字，否则会报错。"}},[s._v("#")]),s._v(" 2）在子类的constructor方法中，只有调用super之后，才可以使用this关键字，否则会报错。")]),s._v(" "),t("h6",{attrs:{id:"_3）super作为对象时，在子类中指向父类的原型对象。即super-parent-prototype。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3）super作为对象时，在子类中指向父类的原型对象。即super-parent-prototype。"}},[s._v("#")]),s._v(" 3）super作为对象时，在子类中指向父类的原型对象。即super=Parent.prototype。")]),s._v(" "),t("p",[s._v("例子：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("class Animal {\n\tconstructor (name) {\n\t\tthis.name = name\n\t}\n\tshowName () {\n\t\talert(this.name)\n\t}\n}\nclass Cat extends Animal {\n\tconstructor (name) {\n\t\tsuper(name)\n\t}\n\tsayMy () {\n\t\tsuper.showName()\n\t}\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("var cat = new Cat('飞翔的哔哔鸡')\ncat.sayMy() //飞翔的哔哔鸡\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h5",{attrs:{id:"_4-static关键字"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-static关键字"}},[s._v("#")]),s._v(" 4.static关键字")]),s._v(" "),t("p",[s._v("在一个方法前加上关键字static，就表示该方法不会被实例继承，但是父类的静态方法，会被子类继承。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("class Animal {\n\tstatic showWhat (name) {\n\t\talert(name)\n\t}\n\tshowName (name) {\n\t\tshowWhat(name)\n\t}\n}\nclass Cat extends Animal {}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Cat.showWhat('小猪') //小猪\n\nvar an = new Animal()\nan.showWhat('小狗') //Uncaught TypeError: an.showWhat is not a function\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);